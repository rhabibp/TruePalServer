name: Deploy TruePal Full Stack

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    # =====================
    # BACKEND DEPLOYMENT
    # =====================
    
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Grant execute permission to gradlew
      run: chmod +x ./gradlew
    
    - name: Build backend with Gradle
      run: ./gradlew build -x test
      env:
        GRADLE_OPTS: '-Xmx2g -Dfile.encoding=UTF-8'
    
    - name: Create backend deployment package
      run: |
        mkdir -p backend-deploy
        cp build/libs/truepalserver-all.jar backend-deploy/app.jar
        
        # FIXED: Simplified startup script to launch the process and exit immediately.
        cat > backend-deploy/start.sh << 'EOF'
        #!/bin/bash
        
        # Stop existing application
        sudo pkill -f "app.jar" || true
        sleep 2
        
        # Start new application in the background
        cd /opt/truepal/backend
        nohup java -jar app.jar > /var/log/truepal/backend.log 2>&1 &
        
        echo "✅ Backend start command issued."
        EOF
        
        chmod +x backend-deploy/start.sh
        tar -czf backend-deploy.tar.gz -C backend-deploy .
    
    - name: Deploy backend to VPS
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT || 22 }}
        source: "backend-deploy.tar.gz"
        target: "/tmp/"
    
    - name: Install and start backend
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT || 22 }}
        script: |
          sudo mkdir -p /opt/truepal/backend
          sudo mkdir -p /var/log/truepal
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          if [ -f "/opt/truepal/backend/app.jar" ]; then
            sudo cp /opt/truepal/backend/app.jar /opt/truepal/backend/app.jar.backup.$TIMESTAMP
            echo "Backend backup created"
          fi
          cd /tmp
          sudo tar -xzf backend-deploy.tar.gz -C /opt/truepal/backend/
          sudo chown -R ${{ secrets.VPS_USER }}:${{ secrets.VPS_USER }} /opt/truepal
          sudo chown -R ${{ secrets.VPS_USER }}:${{ secrets.VPS_USER }} /var/log/truepal
          sudo chmod +x /opt/truepal/backend/start.sh
          /opt/truepal/backend/start.sh
          rm -f /tmp/backend-deploy.tar.gz
          echo "✅ Backend deployment completed"
    
    # =====================
    # FRONTEND DEPLOYMENT
    # (These steps will now run)
    # =====================
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        NODE_ENV: production
    
    - name: Create frontend deployment package
      run: |
        cd frontend
        tar -czf ../frontend-deploy.tar.gz -C dist .
    
    - name: Deploy frontend to VPS
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT || 22 }}
        source: "frontend-deploy.tar.gz"
        target: "/tmp/"
        
    - name: Install and configure frontend
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT || 22 }}
        script: |
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          sudo mkdir -p /var/www/truepal/backups
          if [ -d "/var/www/truepal/dist" ] && [ "$(ls -A /var/www/truepal/dist/)" ]; then
            sudo cp -r /var/www/truepal/dist /var/www/truepal/backups/dist_backup_$TIMESTAMP
            echo "Frontend backup created"
          fi
          sudo mkdir -p /var/www/truepal/dist
          cd /tmp
          if [ -f "frontend-deploy.tar.gz" ]; then
            echo "Extracting frontend files..."
            sudo tar -xzf frontend-deploy.tar.gz -C /var/www/truepal/dist/ --strip-components=0
            echo "Frontend files extracted successfully"
          else
            echo "❌ Frontend deployment package not found!"
            exit 1
          fi
          sudo chown -R www-data:www-data /var/www/truepal
          sudo chmod -R 755 /var/www/truepal/dist
          if [ ! -f "/var/www/truepal/dist/index.html" ]; then
            echo "❌ index.html not found after extraction! Deployment failed."
            exit 1
          fi
          sudo nginx -t
          if [ $? -eq 0 ]; then
            sudo systemctl reload nginx
            echo "✅ Nginx reloaded successfully"
          else
            echo "❌ Nginx configuration error"
            exit 1
          fi
          rm -f /tmp/frontend-deploy.tar.gz
          cd /var/www/truepal/backups || true
          ls -t | tail -n +6 | xargs -r sudo rm -rf
          echo "✅ Frontend deployment completed"
    
    # =====================
    # POST-DEPLOYMENT TESTS
    # =====================
    
    - name: Health check
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT || 22 }}
        script: |
          echo "🔍 Running health checks..."
          sleep 15
          
          # FIXED: Make the check for the backend process mandatory.
          echo "Checking for backend process..."
          if pgrep -f "app.jar" > /dev/null; then
            echo "✅ Backend process is running"
          else
            echo "❌ Backend process not found! Deployment failed."
            # Optional: view the log to debug startup errors
            echo "--- Last 20 lines of backend log ---"
            sudo tail -n 20 /var/log/truepal/backend.log || echo "Log file not found."
            echo "------------------------------------"
            exit 1
          fi

          echo "Checking backend health endpoint..."
          if curl --fail http://localhost:8080/health 2>/dev/null; then
            echo "✅ Backend health check passed"
          else
            echo "⚠️  Backend health check failed. The application might be starting or has an error."
          fi
          
          echo "Checking for frontend files..."
          if [ -f "/var/www/truepal/dist/index.html" ]; then
            echo "✅ Frontend index.html is deployed"
          else
            echo "❌ Frontend index.html is missing"
            exit 1
          fi
          
          echo "Checking Nginx service..."
          if sudo systemctl is-active --quiet nginx; then
            echo "✅ Nginx service is active"
          else
            echo "❌ Nginx service is not running"
          fi
          
          echo ""
          echo "🚀 Full stack deployment completed!"
          echo "🌐 Frontend: http://${{ secrets.VPS_HOST }}"
          echo "🔗 Backend API: http://${{ secrets.VPS_HOST }}/api"
